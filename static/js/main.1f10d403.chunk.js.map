{"version":3,"sources":["js/fontUtility.js","components/NavBar.jsx","components/Header.jsx","components/SingleImage.jsx","components/Loader.jsx","components/ImageGallery.jsx","components/Instructions.jsx","components/Swatches.jsx","components/FontUtility.jsx","components/MemeForm.jsx","components/ChosenImage.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["document","addEventListener","elems","querySelectorAll","window","M","FormSelect","init","NavBar","title","className","href","class","Header","SingleImage","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","handleImageClick","e","handleChosenImage","target","src","scroll","scrollToBottom","state","React","createRef","this","style","gridRowEnd","to","spy","smooth","offset","duration","onClick","ref","url","alt","text","Component","Loader","id","ImageGallery","imageData","axios","get","response","memes","data","prevState","concat","slice","length","map","item","key","name","Instructions","Swatches","handleTextColorChange","value","FontUtility","handleSelectChange","AutoInit","defaultValue","onChange","MemeForm","handleTopTextChange","topText","handleTopText","handleBottomTextChange","bottomText","handleBottomText","type","htmlFor","ChosenImage","fontSize","textColor","calculateMargin","margin","handleMemeCapture","imageWidth","clientWidth","onLoad","chosenImage","width","color","marginTop","Footer","App","imageSrc","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.1f10d403.chunk.js","sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n  var elems = document.querySelectorAll('select');\n  var instances = window.M.FormSelect.init(elems, {});\n});\n","import React from 'react';\n\nconst NavBar = ({ title }) => {\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-wrapper blue darken-3\">\n          <a href=\"/\" className=\"brand-logo center\">\n            {title}\n            <i class=\"fas fa-image\"></i>\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nimport '../css/Header.css';\nconst Header = () => {\n  return (\n    <div>\n      <h2 className=\"meme-instruction center grey-text darken-3\">\n        Click on an image to select the background of your meme\n      </h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link, animateScroll as scroll } from 'react-scroll';\n\nimport '../css/SingleImage.css';\n\nclass SingleImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spans: 0,\n    };\n    this.imageRef = React.createRef();\n  }\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height / 10);\n    this.setState({\n      spans,\n    });\n  };\n\n  handleImageClick = (e) => {\n    this.props.handleChosenImage(e.target.src);\n    scroll.scrollToBottom();\n  };\n\n  render() {\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <Link\n          to=\"chosen-image\"\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          <img\n            onClick={this.handleImageClick}\n            ref={this.imageRef}\n            className=\"single-image\"\n            src={this.props.url}\n            alt={this.props.text}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default SingleImage;\n","import React from 'react';\n\nimport '../css/Loader.css';\n\nconst Loader = () => {\n  return (\n    <div id=\"loader-container\" className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport axios from 'axios';\n\nimport '../css/ImageGallery.css';\nimport SingleImage from '../components/SingleImage.jsx';\nimport Loader from '../components/Loader';\n\nclass ImageGallery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageData: [],\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(\n      'https://api.imgflip.com/get_memes?limit=10'\n    );\n    const { memes } = response.data.data;\n    this.setState((prevState) => {\n      return {\n        imageData: prevState.imageData.concat(memes.slice(0, 20)),\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        {this.state.imageData.length ? (\n          <div className=\"gallery-container\">\n            {this.state.imageData.map((item) => {\n              return (\n                <SingleImage\n                  handleChosenImage={this.props.handleChosenImage}\n                  key={item.id}\n                  text={item.name}\n                  url={item.url}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import React from 'react';\n\nimport '../css/Instructions.css';\n\nconst Instructions = () => {\n  return (\n    <div>\n      <p>\n        Screenshot on Mac:{' '}\n        <span className=\"instruction\">Shift + Command + 4</span>\n      </p>\n      <p>\n        Screenshot on Windows:{' '}\n        <span className=\"instruction\">Windows + Shift + S</span>\n      </p>\n    </div>\n  );\n};\n\nexport default Instructions;\n","import React from 'react';\n\nimport '../css/Swatches.css';\nclass Swatches extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleTextColorChange = (e) => {\n    this.props.handleTextColorChange(e.target.value);\n  };\n  render() {\n    return (\n      <div className=\"swatches-container\">\n        <button onClick={this.handleTextColorChange} value=\"#ef5350\"></button>\n        <button onClick={this.handleTextColorChange} value=\"#42a5f5\"></button>\n        <button onClick={this.handleTextColorChange} value=\"#66bb6a\"></button>\n        <button onClick={this.handleTextColorChange} value=\"white\"></button>\n        <button onClick={this.handleTextColorChange} value=\"black\"></button>\n      </div>\n    );\n  }\n}\n\nexport default Swatches;\n","import React from 'react';\n\nimport M from 'materialize-css';\nimport '../css/FontUtility.css';\nimport '../js/fontUtility';\n\nclass FontUtility extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  componentDidMount() {\n    M.AutoInit();\n  }\n  handleSelectChange = (e) => {\n    this.props.handleSelectChange(e.target.value);\n  };\n\n  render() {\n    return (\n      <div className=\"select-container\">\n        <div className=\"input-field col s12\">\n          <select defaultValue={'DEFAULT'} onChange={this.handleSelectChange}>\n            <option value=\"DEFAULT\">Select Font Size</option>\n            <option value=\"1.5\">Small</option>\n            <option value=\"3\">Medium</option>\n            <option value=\"4\">Large</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FontUtility;\n","import React from 'react';\n\nimport '../css/MemeForm.css';\nimport Instructions from './Instructions';\nimport Swatches from './Swatches';\nimport FontUtility from './FontUtility';\n\nclass MemeForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleTopTextChange = (e) => {\n    const topText = e.target.value;\n    this.props.handleTopText(topText);\n  };\n\n  handleBottomTextChange = (e) => {\n    const bottomText = e.target.value;\n    this.props.handleBottomText(bottomText);\n  };\n\n  render() {\n    return (\n      <div className=\"center\">\n        <Instructions />\n        <Swatches handleTextColorChange={this.props.handleTextColorChange} />\n        <FontUtility handleSelectChange={this.props.handleSelectChange} />\n        <div id=\"form-container\" className=\"row\">\n          <form>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.handleTopTextChange}\n                  id=\"top-text\"\n                  name=\"toptext\"\n                  type=\"text\"\n                />\n                <label htmlFor=\"top-text\">Top text:</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input\n                  onChange={this.handleBottomTextChange}\n                  id=\"bottom-text\"\n                  name=\"bottomtext\"\n                  type=\"text\"\n                />\n                <label htmlFor=\"bottom-text\">Bottom text:</label>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MemeForm;\n","import React from 'react';\n\nimport '../css/ChosenImage.css';\nimport MemeForm from './MemeForm';\nimport Swatches from './Swatches';\n\nclass ChosenImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topText: null,\n      bottomText: null,\n      imageWidth: null,\n      textColor: null,\n      fontSize: null,\n      margin: 0,\n    };\n    this.imageRef = React.createRef();\n  }\n\n  handleSelectChange = (fontSize) => {\n    this.setState({\n      fontSize,\n    });\n  };\n\n  handleTopText = (text) => {\n    this.setState({\n      topText: text,\n    });\n  };\n  handleBottomText = (text) => {\n    this.setState({\n      bottomText: text,\n    });\n  };\n  handleTextColorChange = (textColor) => {\n    this.setState({\n      textColor,\n    });\n  };\n\n  calculateMargin = () => {\n    if (this.imageRef.current.clientHeight > 500) {\n      this.setState({\n        margin: 20,\n      });\n    } else {\n      this.setState({\n        margin: 3,\n      });\n    }\n  };\n\n  handleMemeCapture = () => {};\n\n  componentDidMount() {\n    this.setState({\n      imageWidth: this.imageRef.current.clientWidth,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          onClick={this.handleMemeCapture}\n          onLoad={this.calculateMargin}\n          id=\"chosen-image\"\n          className=\"chosen-image-container capture\"\n        >\n          <img\n            onChange={this.calculateMargin}\n            ref={this.imageRef}\n            src={this.props.chosenImage}\n          />\n          <div\n            style={{ width: this.state.imageWidth }}\n            className=\"meme-text-container\"\n          >\n            <p\n              style={{\n                color: this.state.textColor,\n                fontSize: `${this.state.fontSize}rem`,\n              }}\n              className=\"meme-top-text\"\n            >\n              {this.state.topText}\n            </p>\n            <p\n              style={{\n                color: this.state.textColor,\n                fontSize: `${this.state.fontSize}rem`,\n                marginTop: `${this.state.margin}rem`,\n              }}\n              className=\"meme-bottom-text\"\n            >\n              {this.state.bottomText}\n            </p>\n          </div>\n        </div>\n        {this.props.chosenImage ? (\n          <MemeForm\n            handleSelectChange={this.handleSelectChange}\n            handleTextColorChange={this.handleTextColorChange}\n            handleBottomText={this.handleBottomText}\n            handleTopText={this.handleTopText}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default ChosenImage;\n","import React from 'react';\n\nimport '../css/Footer.css';\nconst Footer = ({ name }) => {\n  return (\n    <div>\n      <footer className=\"footer center\">\n        <p>Created by {name} &copy;2020</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport '../css/App.css';\nimport NavBar from './NavBar.jsx';\nimport Header from './Header.jsx';\nimport ImageGallery from './ImageGallery.jsx';\nimport ChosenImage from './ChosenImage.jsx';\nimport Footer from './Footer.jsx';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chosenImage: null,\n    };\n  }\n\n  handleChosenImage = (imageSrc) => {\n    this.setState({\n      chosenImage: imageSrc,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"main-content\">\n          <NavBar title=\"Meme Maker\" />\n          <Header />\n          <ImageGallery handleChosenImage={this.handleChosenImage} />\n          <ChosenImage chosenImage={this.state.chosenImage} />\n        </div>\n        <Footer name=\"Ian Hart\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/Index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}