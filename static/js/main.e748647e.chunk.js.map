{"version":3,"sources":["components/NavBar.jsx","components/Header.jsx","components/SingleImage.jsx","components/Loader.jsx","components/ImageGallery.jsx","components/MemeForm.jsx","components/Swatches.jsx","components/ChosenImage.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["NavBar","title","className","href","Header","SingleImage","props","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","setState","handleImageClick","e","handleChosenImage","target","src","getImageSize","clientWidth","scroll","scrollToBottom","state","React","createRef","this","addEventListener","style","gridRowEnd","to","spy","smooth","offset","duration","onClick","ref","url","alt","text","Component","Loader","id","ImageGallery","imageData","axios","get","response","memes","data","prevState","concat","slice","length","map","item","key","name","MemeForm","handleSubmit","preventDefault","topText","elements","toptext","value","bottomText","bottomtext","autocomplete","onSubmit","type","htmlFor","Swatches","handleTextColorChange","ChosenImage","textColor","canvasRef","anchorRef","ctx","getContext","image","Image","crossOrigin","chosenImage","onload","localStorage","getItem","removeItem","setItem","drawImage","width","font","fillStyle","textAlign","fillText","dataURL","toDataURL","chosenImageWidth","chosenImageHeight","download","Footer","App","imageSrc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e748647e.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = ({ title }) => {\n  return (\n    <div>\n      <nav>\n        <div className=\"nav-wrapper blue darken-3\">\n          <a href=\"/\" className=\"brand-logo center\">\n            {title}\n            <i className=\"fas fa-image\"></i>\n          </a>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\n\nimport '../css/Header.css';\nconst Header = () => {\n  return (\n    <div>\n      <h2 className=\"meme-instruction center grey-text darken-3\">\n        Click on an image to select the background of your meme\n      </h2>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { Link, animateScroll as scroll } from 'react-scroll';\n\nimport '../css/SingleImage.css';\n\nclass SingleImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      spans: 0,\n    };\n    this.imageRef = React.createRef();\n  }\n  componentDidMount() {\n    this.imageRef.current.addEventListener('load', this.setSpans);\n  }\n\n  setSpans = () => {\n    const height = this.imageRef.current.clientHeight;\n\n    const spans = Math.ceil(height / 10);\n    this.setState({\n      spans,\n    });\n  };\n\n  handleImageClick = (e) => {\n    this.props.handleChosenImage(e.target.src);\n    this.props.getImageSize(e.target.clientHeight, e.target.clientWidth);\n    scroll.scrollToBottom();\n  };\n\n  render() {\n    return (\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\n        <Link\n          to=\"chosen-image\"\n          spy={true}\n          smooth={true}\n          offset={-70}\n          duration={500}\n        >\n          <img\n            onClick={this.handleImageClick}\n            ref={this.imageRef}\n            className=\"single-image\"\n            src={this.props.url}\n            alt={this.props.text}\n          />\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default SingleImage;\n","import React from 'react';\n\nimport '../css/Loader.css';\n\nconst Loader = () => {\n  return (\n    <div id=\"loader-container\" className=\"preloader-wrapper big active\">\n      <div className=\"spinner-layer spinner-blue-only\">\n        <div className=\"circle-clipper left\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"gap-patch\">\n          <div className=\"circle\"></div>\n        </div>\n        <div className=\"circle-clipper right\">\n          <div className=\"circle\"></div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from 'react';\nimport axios from 'axios';\n\nimport '../css/ImageGallery.css';\nimport SingleImage from '../components/SingleImage.jsx';\nimport Loader from '../components/Loader';\n\nclass ImageGallery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      imageData: [],\n    };\n  }\n\n  async componentDidMount() {\n    const response = await axios.get(\n      'https://api.imgflip.com/get_memes?limit=10'\n    );\n    const { memes } = response.data.data;\n    this.setState((prevState) => {\n      return {\n        imageData: prevState.imageData.concat(memes.slice(0, 20)),\n      };\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        {this.state.imageData.length ? (\n          <div className=\"gallery-container\">\n            {this.state.imageData.map((item) => {\n              return (\n                <SingleImage\n                  getImageSize={this.props.getImageSize}\n                  handleChosenImage={this.props.handleChosenImage}\n                  key={item.id}\n                  text={item.name}\n                  url={item.url}\n                />\n              );\n            })}\n          </div>\n        ) : (\n          <Loader />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import React from 'react';\n\nimport '../css/MemeForm.css';\n\nclass MemeForm extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const topText = e.target.elements.toptext.value;\n    const bottomText = e.target.elements.bottomtext.value;\n    this.props.handleSubmit(topText, bottomText);\n    e.target.elements.toptext.value = '';\n    e.target.elements.bottomtext.value = '';\n  };\n  render() {\n    return (\n      <div>\n        <div id=\"form-container\" className=\"row\">\n          <form autocomplete=\"off\" onSubmit={this.handleSubmit}>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input id=\"top-text\" name=\"toptext\" type=\"text\" />\n                <label htmlFor=\"top-text\">Top text:</label>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s12\">\n                <input id=\"bottom-text\" name=\"bottomtext\" type=\"text\" />\n                <label htmlFor=\"bottom-text\">Bottom text:</label>\n              </div>\n            </div>\n            <button type=\"submit\" className=\"add-text\">\n              Add Text\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\nexport default MemeForm;\n","import React from 'react';\n\nimport '../css/Swatches.css';\nclass Swatches extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleTextColorChange = (e) => {\n    this.props.handleTextColorChange(e.target.value);\n  };\n  render() {\n    return (\n      <div className=\"swatches-container\">\n        <button onClick={this.handleTextColorChange} value=\"#ef5350\"></button>\n        <button onClick={this.handleTextColorChange} value=\"#42a5f5\"></button>\n        <button onClick={this.handleTextColorChange} value=\"#66bb6a\"></button>\n        <button onClick={this.handleTextColorChange} value=\"white\"></button>\n        <button onClick={this.handleTextColorChange} value=\"black\"></button>\n      </div>\n    );\n  }\n}\n\nexport default Swatches;\n","import React from 'react';\n\nimport '../css/ChosenImage.css';\nimport MemeForm from './MemeForm';\nimport Swatches from './Swatches';\n\nclass ChosenImage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      topText: '',\n      bottomText: '',\n      textColor: null,\n    };\n    this.imageRef = React.createRef();\n    this.canvasRef = React.createRef();\n    this.anchorRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    const ctx = this.canvasRef.current.getContext('2d');\n    let image = new Image();\n    image.crossOrigin = 'anonymous';\n    image.src = this.props.chosenImage || '';\n    image.onload = () => {\n      if (localStorage.getItem('isThereAnImage')) {\n        localStorage.removeItem('isThereAnImage');\n\n        return;\n      } else {\n        localStorage.setItem('isThereAnImage', true);\n        ctx.drawImage(\n          image,\n          0,\n          0,\n          this.canvasRef.current.width,\n          this.canvasRef.current.height\n        );\n      }\n    };\n\n    ctx.font = '32px Arial';\n    ctx.fillStyle = this.state.textColor;\n    ctx.textAlign = 'center';\n    ctx.fillText(this.state.topText, this.canvasRef.current.width / 2, 30);\n    ctx.fillText(\n      this.state.bottomText,\n      this.canvasRef.current.width / 2,\n      this.canvasRef.current.height\n    );\n    const dataURL = this.canvasRef.current.toDataURL('image/jpg');\n    this.anchorRef.current.href = dataURL;\n  }\n\n  handleSubmit = (topText, bottomText) => {\n    this.setState({\n      topText,\n      bottomText,\n    });\n  };\n  handleTextColorChange = (textColor) => {\n    this.setState({\n      textColor,\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"chosen-image-container\">\n          <canvas\n            ref={this.canvasRef}\n            id=\"chosen-image\"\n            width={this.props.chosenImageWidth || '400'}\n            height={this.props.chosenImageHeight || '400'}\n          ></canvas>\n          {this.props.chosenImage === null ? null : (\n            <div>\n              <a ref={this.anchorRef} download className=\"download-btn\">\n                Download{' '}\n              </a>\n              <Swatches handleTextColorChange={this.handleTextColorChange} />\n              <MemeForm handleSubmit={this.handleSubmit} />{' '}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChosenImage;\n","import React from 'react';\n\nimport '../css/Footer.css';\nconst Footer = ({ name }) => {\n  return (\n    <div>\n      <footer className=\"footer center\">\n        <p>Created by {name} &copy;2020</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport '../css/App.css';\nimport NavBar from './NavBar.jsx';\nimport Header from './Header.jsx';\nimport ImageGallery from './ImageGallery.jsx';\nimport ChosenImage from './ChosenImage.jsx';\nimport Footer from './Footer.jsx';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chosenImage: null,\n      chosenImageHeight: null,\n      chosenImageWidth: null,\n    };\n  }\n\n  handleChosenImage = (imageSrc) => {\n    this.setState({\n      chosenImage: imageSrc,\n    });\n  };\n\n  getImageSize = (height, width) => {\n    this.setState({\n      chosenImageHeight: height,\n      chosenImageWidth: width,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"main-content\">\n          <NavBar title=\"Meme Maker\" />\n          <Header />\n          <ImageGallery\n            getImageSize={this.getImageSize}\n            handleChosenImage={this.handleChosenImage}\n          />\n          <ChosenImage\n            chosenImageWidth={this.state.chosenImageWidth}\n            chosenImageHeight={this.state.chosenImageHeight}\n            chosenImage={this.state.chosenImage}\n          />\n        </div>\n        <Footer name=\"Ian Hart\" />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/Index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}